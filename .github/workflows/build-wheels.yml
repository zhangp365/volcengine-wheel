name: Build and Release Wheels

on:
  workflow_dispatch:
    inputs:
      version:
        description: '火山引擎SDK版本号 (例如: v1.0.0)'
        required: true
        type: string
      source_repo:
        description: '源代码仓库地址'
        required: false
        default: 'https://github.com/volcengine/volc-sdk-python.git'
        type: string

jobs:
  build-wheels:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 安装构建依赖
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools build
        
    - name: 克隆火山引擎SDK源码
      run: |
        git clone ${{ github.event.inputs.source_repo }} volc-sdk-source
        cd volc-sdk-source
        git checkout ${{ github.event.inputs.version }}
        
    - name: 构建wheel包
      run: |
        cd volc-sdk-source
        python -m build --wheel
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: wheel-python-${{ matrix.python-version }}
        path: volc-sdk-source/dist/*.whl
        
  create-release:
    needs: build-wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
      with:
        path: wheels
        
    - name: 整理文件
      run: |
        mkdir -p release-files
        # 为每个wheel文件添加Python版本标识
        for wheel_file in $(find wheels -name "*.whl"); do
          # 从路径中提取Python版本
          python_version=$(echo "$wheel_file" | grep -o 'python-[0-9.]*' | sed 's/python-//')
          # 获取原始文件名（不含路径）
          filename=$(basename "$wheel_file")
          # 在文件名中插入Python版本信息
          new_filename=$(echo "$filename" | sed "s/-py3-none-any/-py${python_version}-any/")
          cp "$wheel_file" "release-files/$new_filename"
        done
        echo "=== 整理后的文件 ==="
        ls -la release-files/
        
    - name: 列出下载的文件
      run: |
        echo "=== 文件结构 ==="
        find wheels -type f -name "*.whl" | head -20
        echo "=== 目录结构 ==="
        ls -la wheels/
        echo "=== 子目录内容 ==="
        for dir in wheels/*/; do
          echo "--- $dir ---"
          ls -la "$dir" 2>/dev/null || echo "目录不存在"
        done
        
    - name: 创建Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: |
          ## 火山引擎SDK ${{ github.event.inputs.version }}
          
          包含以下Python版本的wheel包：
          - Python 3.7 (volcengine-${{ github.event.inputs.version }}-py37-any.whl)
          - Python 3.9 (volcengine-${{ github.event.inputs.version }}-py39-any.whl)
          - Python 3.10 (volcengine-${{ github.event.inputs.version }}-py310-any.whl)
          - Python 3.11 (volcengine-${{ github.event.inputs.version }}-py311-any.whl)
          - Python 3.12 (volcengine-${{ github.event.inputs.version }}-py312-any.whl)
          
          构建时间: ${{ github.event.head_commit.timestamp }}
        files: release-files/*.whl
        generate_release_notes: false
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }} 